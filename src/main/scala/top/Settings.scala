package top

trait Common {
  val EnableILA = true
  val VAddrBits = 39
  val EnableDebug = false
  val HasMMIO = true
  val FPGAmode = "pynq"   // Can be set "pynq" or "axu3cg"
}

trait OoOCore {
  val HasL2cache = true
  val HasPrefetch = true
  val EnableMultiIssue = true
  val EnableSuperScalarExec = true
  val EnableOutOfOrderExec = true
  val HasDTLB = true
  val HasITLB = true
  val HasDcache = true
  val HasIcache = true
  val MmodeOnly = false
  val IsRV32 = false
}

trait SeqCore {
  val HasL2cache = true
  val HasPrefetch = true
  val EnableMultiIssue = false
  val EnableSuperScalarExec = false
  val EnableOutOfOrderExec = false
  val HasDTLB = true
  val HasITLB = true
  val HasDcache = true
  val HasIcache = true
  val MmodeOnly = false
  val IsRV32 = false
}

trait SmallCore {
  val HasL2cache = false
  val HasPrefetch = false
  val EnableMultiIssue = false
  val EnableSuperScalarExec = false
  val EnableOutOfOrderExec = false
  val HasDTLB = false
  val HasITLB = false
  val HasDcache = false
  val HasIcache = false
  val MmodeOnly = true
  val IsRV32 = true
}

object Settings extends Common with SeqCore {}

//****************************************
// Generate RV32 core
//****************************************

// 1. Enable IsRV32
// 2. Set DATAWIDTH = 32 in Makefile
// 3. make a fresh build


//****************************************
// Instructions to boot on axu3cg
//****************************************

// 1. Set FPGAmode = "axu3cg"
// 2. Create a project in fpga/
// 3. Generate bitstram using vivado
// 4. Copy bit-file to server:/tftpboot/axu3cg/, handle soft link of fpga.bit and power on


//****************************************
// Instructions to boot on pynq
//****************************************

// 1. Set FPGAmode = "pynq"
// 2. Create a project in fpga/ with arg "STANDALONE=true" (no "-" in PRJ name)
// 3. Generate bitstram using vivado and export a hardware description file
// 4. Handle soft links in fpga/boot/build/zynq/
//       fpga.bit  ->  bitstream generated by vivado
//       ps.hdf    ->  PRJ_PATH/PRJ.sdk/system_top_wrapper.hdf
// 5. Configure FSBL_LOC variable in fpga/resource/fsbl-loader/Makefile
// 6. Run bootgen, copy BOOT.BIN to SD card and power on