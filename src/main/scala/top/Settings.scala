package top

object CommonSetting {
  var commonBoolMap = Map(
    "HasMMIO" -> true,
    "EnableILA" -> true,
    "EnableDebug" -> false
  )
}

object BoardRelatedSetting {
  var pynqValueMap = Map(
    "VAddrBits" -> 39L,
    "FPGAmode" -> 2L,    // axu3cg: 1, pynq: 2
    "VAddrBits" -> 39L,
    "MMIOBase" -> 0x0000000040000000L,
    "MMIOSize" -> 0x0000000010000000L,
    "ResetVector" -> 0x80000000L,
    "NrExtIntr" -> 1L
  )
  var axu3cgValueMap = Map(
    "VAddrBits" -> 39L,
    "FPGAmode" -> 1L,    // axu3cg: 1, pynq: 2
    "VAddrBits" -> 39L,
    "MMIOBase" -> 0x0000000040000000L,
    "MMIOSize" -> 0x0000000010000000L,
    "ResetVector" -> 0x80000000L,
    "NrExtIntr" -> 1L
  )
}

object CoreRelatedSetting {
  var oooCoreBoolMap = Map(
    "HasL2cache" -> true,
    "HasPrefetch" -> true,
    "EnableMultiIssue" -> true,
    "EnableSuperScalarExec" -> true,
    "EnableOutOfOrderExec" -> true,
    "HasDTLB" -> true,
    "HasITLB" -> true,
    "HasDcache" -> true,
    "HasIcache" -> true,
    "MmodeOnly" -> false,
    "IsRV32" -> false
  )
  var seqCoreBoolMap = Map(
    "HasL2cache" -> true,
    "HasPrefetch" -> true,
    "EnableMultiIssue" -> false,
    "EnableSuperScalarExec" -> false,
    "EnableOutOfOrderExec" -> false,
    "HasDTLB" -> true,
    "HasITLB" -> true,
    "HasDcache" -> true,
    "HasIcache" -> true,
    "MmodeOnly" -> false,
    "IsRV32" -> false
  )
  var smallCoreBoolMap = Map(
    "HasL2cache" -> false,
    "HasPrefetch" -> false,
    "EnableMultiIssue" -> false,
    "EnableSuperScalarExec" -> false,
    "EnableOutOfOrderExec" -> false,
    "HasDTLB" -> false,
    "HasITLB" -> false,
    "HasDcache" -> false,
    "HasIcache" -> false,
    "MmodeOnly" -> true,
    "IsRV32" -> true
  )
}

object Settings {
  var boolMap: Map[String, Boolean] = Map()
  var valueMap: Map[String, Long] = Map()
  def get(field: String): Boolean = {
    boolMap(field)
  }
  def getLong(field: String) = {
    valueMap(field)
  }
  def getInt(field: String) = {
    getLong(field).toInt
  }
}

//****************************************
// Generate RV32 core
//****************************************

// 1. Enable IsRV32
// 2. Set DATAWIDTH = 32 in Makefile
// 3. make a fresh build


//****************************************
// Instructions to boot on axu3cg
//****************************************

// 1. Set FPGAmode = "axu3cg"
// 2. Create a project in fpga/
// 3. Generate bitstram using vivado
// 4. Copy bit-file to server:/tftpboot/axu3cg/, handle soft link of fpga.bit and power on


//****************************************
// Instructions to boot on pynq
//****************************************

// 1. Set FPGAmode = "pynq"
// 2. Create a project in fpga/ with arg "STANDALONE=true" (no "-" in PRJ name)
// 3. Generate bitstram using vivado and export a hardware description file
// 4. Handle soft links in fpga/boot/build/zynq/
//       fpga.bit  ->  bitstream generated by vivado
//       ps.hdf    ->  PRJ_PATH/PRJ.sdk/system_top_wrapper.hdf
// 5. Configure FSBL_LOC variable in fpga/resource/fsbl-loader/Makefile
// 6. Run bootgen, copy BOOT.BIN to SD card and power on
